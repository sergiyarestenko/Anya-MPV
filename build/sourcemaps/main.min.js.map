{"version":3,"sources":["01_main.js"],"names":["observeHeader","header","observeTarget","IntersectionObserver","entries","forEach","entry","isIntersecting","classList","remove","add","observe","changeHeaderClassOnScroll","document","getElementById"],"mappings":"AAQA,MAAMA,cAAgB,CAACC,EAAQC,KACZ,IAAIC,sBAAsBC,IACzCA,EAAQC,SAASC,IACXA,EAAMC,eACRN,EAAOO,UAAUC,OAAO,YAExBR,EAAOO,UAAUE,IAAI,WACvB,GACD,IAEMC,QAAQT,EAAa,EAG1BU,0BAA4B,KAChC,MAAMX,EAASY,SAASC,eAAe,UACjCZ,EAAgBW,SAASC,eAAe,YAE9Cd,cAAcC,EAAQC,EAAa,EAInCU","file":"../js/main.min.js","sourcesContent":["// function debounce(func, ms = 250) {\n//   let timeout\n//   return function () {\n//     clearTimeout(timeout)\n//     timeout = setTimeout(() => func.apply(this, arguments), ms)\n//   }\n// }\n\nconst observeHeader = (header, observeTarget) => {\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        header.classList.remove('scrolled')\n      } else {\n        header.classList.add('scrolled')\n      }\n    })\n  })\n  observer.observe(observeTarget)\n}\n\nconst changeHeaderClassOnScroll = () => {\n  const header = document.getElementById('header')\n  const observeTarget = document.getElementById('observer')\n\n  observeHeader(header, observeTarget)\n}\n\n;(function () {\n  changeHeaderClassOnScroll();\n})()\n"]}